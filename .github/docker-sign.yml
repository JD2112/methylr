name: Publish Docker image
on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker hub
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        max-parallel: 2
        matrix:
            include:
                # All non supported by base image are commented
                # This is an example for base image alpine
                - { platform: "linux/arm64", platform-tag: "arm64" }
                - { platform: "linux/amd64", platform-tag: "amd64" }
                - { platform: "linux/arm/v7", platform-tag: "armv7" }
                - { platform: "linux/arm/v6", platform-tag: "armv6" }
                - { platform: "linux/ppc64le", platform-tag: "ppc64le" }
                #- { platform: "linux/riscv64", platform-tag: "riscv64" }
                - { platform: "linux/s390x", platform-tag: "s390x" }
                - { platform: "linux/386", platform-tag: "386" }
                #- { platform: "linux/mips64le", platform-tag: "mips64le" }
                #- { platform: "linux/mips64", platform-tag: "mips64" }

    steps:
        - name: Check out the repository
          uses: actions/checkout@v2
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            registry: docker.io
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PAT }}
        # https://github.com/docker/setup-qemu-action
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        # https://github.com/docker/setup-buildx-action
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Build action image
          run: PLATFORM="${{ matrix.platform }}" IMAGE_TAG="docker.io/botsudo/nut-upsd:${{ matrix.platform-tag }}-latest" make docker-build
          env:
            DOCKER_BUILDKIT: 1

        - name: Sign and push docker image
          uses: sudo-bot/action-docker-sign@latest
          with:
            image-ref: "docker.io/botsudo/nut-upsd:${{ matrix.platform-tag }}-latest"
            private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
            private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
            private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}

  sign-manifest:
    name: Sign the docker hub manifest
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
        - uses: actions/setup-go@v2
          with:
            go-version: '^1.12'
        - name: 'Install module'
          run: |
            export GO111MODULE=on
            go get github.com/theupdateframework/notary
            go install -tags pkcs11 github.com/theupdateframework/notary/cmd/notary@latest
            notary --help
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            registry: docker.io
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PAT }}
        - name: Create a manifest
          run: |
            DOCKER_CLI_EXPERIMENTAL=enabled docker manifest create docker.io/botsudo/nut-upsd:latest \
                docker.io/botsudo/nut-upsd:arm64-latest \
                docker.io/botsudo/nut-upsd:amd64-latest \
                docker.io/botsudo/nut-upsd:armv7-latest \
                docker.io/botsudo/nut-upsd:armv6-latest \
                docker.io/botsudo/nut-upsd:ppc64le-latest \
                docker.io/botsudo/nut-upsd:s390x-latest \
                docker.io/botsudo/nut-upsd:386-latest \
                --amend

        - name: Sign and push the manifest
          uses: sudo-bot/action-docker-sign@latest
          with:
            image-ref: "docker.io/botsudo/nut-upsd:latest"
            # Please use the repository key for the manufest or pull will not work
            private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
            private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
            private-key-passphrase: ${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}
            sign-manifest: true
            notary-auth: "${{ secrets.DOCKER_USER }}:${{ secrets.DOCKER_PAT }}"
